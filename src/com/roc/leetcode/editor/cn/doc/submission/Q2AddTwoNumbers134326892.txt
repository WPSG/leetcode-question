class Solution {
   public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode sumList , p;
        sumList = new ListNode();
        p = sumList;
        int carry = 0;
        int sumTemp = 0;
        while(l1 != null && l2 != null){
            if ((l1.val + l2.val + carry) >= 10) {
                sumTemp = (l1.val + l2.val + carry) % 10;
                carry = 1;
            } else {
                sumTemp = l1.val + l2.val + carry;
                carry = 0;
            }
            p.val = sumTemp;
            if(l1.next != null || l2.next != null){
                p.next = new ListNode();
                p = p.next;
            }
            l1 = l1.next;
            l2 = l2.next;
        }
        if(l1 != null)
            l2 = l1;
        while(l2 != null) {
            if ((l2.val + carry) >= 10) {
                sumTemp = (l2.val + carry) % 10;
                carry = 1;
            } else {
                sumTemp = l2.val + carry;
                carry = 0;
            }
            p.val = sumTemp;
            if(l2.next != null){
                p.next = new ListNode();
                p = p.next;
            } 
            l2 = l2.next;
        }
        if(carry == 1){
            p.next = new ListNode(carry);
        }
        return sumList;
    }
}
//runtime:2 ms
//memory:38.9 MB
